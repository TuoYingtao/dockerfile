# 构建linux/amd64（x86_64）CPU。 服务器CPU查看方式：uname -m
# 镜像可用CPU查看：docker inspect tuoyingtao/ios_sign_java8:v1.0.0 | grep Architecture
# 构建不同CPU
# docker build --platform linux/amd64 -t tuoyingtao/ios_sign_java8:v1.0.0 .
#
# 1.构建上传到docker hub远程
# docker build --platform linux/amd64 -t tuoyingtao/usign-python:3_ubuntu_amd64 -f Dockerfile-service-app-client-bash .
# docker run --rm -it -v $(pwd):/app tuoyingtao/usign-python:3_ubuntu_amd64 /bin/bash
#
# 2.构建本地
# docker build -t ipa-zsign -f Dockerfile-service-app-client-bash .
# docker run --rm -it -v $(pwd):/app ipa-zsign /bin/bash

FROM ubuntu:22.04

# 创建必要目录
RUN mkdir -p /opt/app/bin

# 更新并安装依赖
RUN apt-get update && apt-get install -y \
    git g++ pkg-config libssl-dev libminizip-dev ideviceinstaller make zlib1g-dev unzip file \
    python3 python3-pip python3-venv && \
    git clone https://github.com/zhlynn/zsign.git /opt/app/src/zsign && \
    cd /opt/app/src/zsign/build/linux && \
    make clean && make && \
    cp /opt/app/src/zsign/bin/zsign /usr/local/bin/zsign && \
    rm -rf /opt/app/src/ && \
    apt-get remove -y git g++ pkg-config make && \
    apt-get autoremove -y && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# 设置时区
RUN ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime && echo "Asia/Shanghai" > /etc/timezone

# 创建 Python 虚拟环境
RUN python3 -m venv /opt/app/venv && \
    . /opt/app/venv/bin/activate && \
    pip install --upgrade pip

# 赋予 /opt/app/ 及 bin/ 目录权限
RUN chmod -R 755 /opt/app && chmod +x /usr/local/bin/zsign

# 设置环境变量
ENV PATH="/opt/app/venv/bin:/usr/local/bin:$PATH"

CMD ["/bin/bash"]
